---
# tasks file for oraclerestart

- name: Set authorized key took from file
  authorized_key:
    user: oracle
    state: present
    key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"

- name: ensure private key and public one are present
  copy: 
    src: keys/
    dest: "/home/oracle/.ssh/"
    mode: 0400
    owner: oracle
    group: oinstall
  with_items:
    - id_rsa

- name: Accept ssh keys from all other cluster nodes
  shell: "ssh -oStrictHostKeyChecking=no {{ item }} hostname"
  become: yes
  become_user: oracle
  with_items:
    - "{{ ansible_play_batch }}"
      
- name: 'Extend the u01'
  lvol:
    vg: vg01
    lv: u01
    size: 50G
    shrink: no
    resizefs: yes

- name: Oracle CRS required packages
  yum: 
    name=device-mapper-multipath,ksh,sysstat,smartmontools,gcc-c++,net-tools
    state=latest

- name: Oracle CRS required packages
  yum: 
    name=cvuqdisk
    state=latest
    disable_gpg_check=yes 

- include: asm.disks.yml

- name: "ora_1_env file"
  template:
    src: ora_1_env.ASM
    dest: "/home/oracle/.ora_1_env"

- name: "Gi fome"
  file:
    path: "/oracle/u01/gi/{{ oracle_ver_path }}"
    state: directory
    owner: oracle
    group: oinstall
    recurse: yes
    mode: '0755'

- name: "Oracle KB"
  file:
    path: "/home/oracle/.ORACLE_KB"
    state: directory
    owner: oracle
    group: oinstall

- name: check if Oracle CRS unpacked
  stat: 
    path: /oracle/u01/gi/{{ oracle_ver_path }}/bin/
  register: crs_unpacked
  
- debug:
    msg: "Install package exists: {{ crs_unpacked.stat.exists }} on {{ first_rac_node }}"

- include: download.package.yml
  when: crs_unpacked.stat.exists != True

- name: check if Oracle CRS set up
  stat: 
    path: /oracle/u01/oraInventory/oraInst.loc
  register: crs_set_up
  when: ansible_hostname == first_rac_node

- debug:
    msg: "Install oraInventory exists: {{ crs_set_up }} "

- name: fqdn
  include_tasks: fqdn.yml
  loop: "{{ ansible_play_batch }}"

- debug:
    var: crs_nodes_fqdn

# This one is done as part of golden image creatinon
# - name: install grid.rsp
#   template:
#     src: grid.phase.0.no.comments.rsp
#     dest: /home/oracle/grid.phase.0.rsp
#     mode: '0640'
#     owner: oracle

- name: Build crs node list
  set_fact:
    crs_node_list : "{{ crs_node_list | default('') }}{{ dns_hosts[item]['fqdn'] }}:{{ dns_hosts[item]['vip'] }},"
  with_items: "{{ ansible_play_batch }}"
- name: crs node list
  debug:
    var: crs_node_list

- name: install grid.rsp
  template:
    src: grid.phase.1.no.comments.rsp
    dest: /home/oracle/grid.phase.1.rsp
    mode: '0640'
    owner: oracle

- name: wait for oracle-ohasd.service
  systemd:
    name: oracle-ohasd.service
  register: oracle_ohasd_service

- debug:
    msg: "oracle-ohasd.service {{ oracle_ohasd_service.status.LoadState }}"

- include: setup.grid.yml
  when: ansible_hostname == first_rac_node and crs_set_up.stat.exists != True

- name: orainstRoot.sh
  shell: /oracle/u01/oraInventory/orainstRoot.sh
  args:
    creates: /etc/oraInst.loc

- name: root.sh (1st node)
  shell: /oracle/u01/gi/{{ oracle_ver_path }}/root.sh
  when: ansible_hostname == first_rac_node and oracle_ohasd_service.status.LoadState == "not-found"

- name: root.sh (other nodes)
  shell: /oracle/u01/gi/{{ oracle_ver_path }}/root.sh
  when: ansible_hostname != first_rac_node and oracle_ohasd_service.status.LoadState == "not-found"

- name: check if ORACLE_HOME/DBA exists
  stat: 
    path: /oracle/u01/gi/{{ oracle_ver_path }}/DBA
  register: dba_dir_present

- name: execute config tools
  block:
    - name: "gridSetup.sh (part II)"
      shell: "./gridSetup.sh -silent -executeConfigTools -responseFile /home/oracle/grid.phase.1.rsp"
      args:
        chdir:   "/oracle/u01/gi/{{ oracle_ver_path }}"
        #creates: "/oracle/u01/gi/{{ oracle_ver_path }}/install/checkpoints/oui/checkpoint_null.xml"
      ignore_errors: true
      register: grid_setup_out2      
    - debug: 
        msg: "gridSetup.sh (part II) {{ grid_setup_out2 }}"
      when: grid_setup_out2.rc >= 0
    - debug: 
        msg: "Return code is {{ grid_setup_out2.rc }}"
      when: grid_setup_out2.rc >= 0

    - name: Create directory DBA
      file:
        path: "/oracle/u01/gi/{{ oracle_ver_path }}/DBA"
        state: directory

  become: yes
  become_user: oracle
  when: ansible_hostname == first_rac_node and dba_dir_present.stat.exists != True

- name: Create directory DBA
  block:
    - name: Create directory DBA (2nd node)
      file:
        path: "/oracle/u01/gi/{{ oracle_ver_path }}/DBA"
        state: directory
  become: yes
  become_user: oracle
  when: ansible_hostname != first_rac_node and dba_dir_present.stat.exists != True
